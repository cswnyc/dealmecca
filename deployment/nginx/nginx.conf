# =============================================================================
# DEALMECCA PRODUCTION NGINX CONFIGURATION
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Maximum number of connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # =============================================================================
    # BASIC SETTINGS
    # =============================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer settings
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # =============================================================================
    # COMPRESSION
    # =============================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # =============================================================================
    # RATE LIMITING
    # =============================================================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # =============================================================================
    # SSL CONFIGURATION
    # =============================================================================
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # =============================================================================
    # SECURITY HEADERS
    # =============================================================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.stripe.com https://www.google-analytics.com; frame-src https://js.stripe.com;" always;
    
    # =============================================================================
    # UPSTREAM SERVERS
    # =============================================================================
    upstream app_server {
        server app:3000;
        keepalive 32;
    }
    
    # =============================================================================
    # HTTP TO HTTPS REDIRECT
    # =============================================================================
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;
        
        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # =============================================================================
    # MAIN HTTPS SERVER
    # =============================================================================
    server {
        listen 443 ssl http2;
        server_name your-domain.com www.your-domain.com;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/live/your-domain.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/your-domain.com/privkey.pem;
        
        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # =============================================================================
        # STATIC ASSETS
        # =============================================================================
        location /_next/static/ {
            proxy_pass http://app_server;
            proxy_cache_valid 200 1y;
            add_header Cache-Control "public, immutable";
            expires 1y;
        }
        
        location /static/ {
            proxy_pass http://app_server;
            proxy_cache_valid 200 1d;
            add_header Cache-Control "public";
            expires 1d;
        }
        
        # =============================================================================
        # UPLOADED FILES
        # =============================================================================
        location /uploads/ {
            alias /var/www/uploads/;
            expires 1d;
            add_header Cache-Control "public";
            
            # Security for uploaded files
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }
        
        # =============================================================================
        # API ROUTES WITH RATE LIMITING
        # =============================================================================
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://app_server;
            include /etc/nginx/conf.d/proxy_params;
        }
        
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://app_server;
            include /etc/nginx/conf.d/proxy_params;
        }
        
        # =============================================================================
        # HEALTH CHECK
        # =============================================================================
        location /health {
            access_log off;
            proxy_pass http://app_server/api/health;
            include /etc/nginx/conf.d/proxy_params;
        }
        
        # =============================================================================
        # WEBSOCKET SUPPORT
        # =============================================================================
        location /ws {
            proxy_pass http://app_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # =============================================================================
        # MAIN APPLICATION
        # =============================================================================
        location / {
            limit_req zone=general burst=50 nodelay;
            proxy_pass http://app_server;
            include /etc/nginx/conf.d/proxy_params;
            
            # Cache for static pages
            location ~* ^/(auth|pricing|terms|privacy)$ {
                proxy_pass http://app_server;
                proxy_cache_valid 200 1h;
                add_header Cache-Control "public";
                expires 1h;
            }
        }
        
        # =============================================================================
        # SECURITY BLOCKS
        # =============================================================================
        # Block common exploit attempts
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block PHP execution attempts
        location ~* \.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block suspicious requests
        if ($http_user_agent ~* (bot|crawler|spider|wget|curl)) {
            return 403;
        }
    }
    
    # =============================================================================
    # MONITORING SERVER (INTERNAL)
    # =============================================================================
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;
            deny all;
        }
        
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
} 