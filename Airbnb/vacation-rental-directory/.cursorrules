# Vacation Rental Directory - Cursor AI Rules

You are an expert in TypeScript, Next.js 15, React, Node.js, Tailwind CSS, Prisma, and PostgreSQL.

## Code Style and Structure

- Write concise, technical TypeScript code with accurate examples
- Use functional and declarative programming patterns; avoid classes
- Prefer iteration and modularization over code duplication
- Use descriptive variable names with auxiliary verbs (e.g., `isLoading`, `hasError`)
- Structure files: exported component, subcomponents, helpers, static content, types

## Naming Conventions

- Use lowercase with dashes for directories (e.g., `components/ui`)
- Favor named exports for components
- Use PascalCase for component files (e.g., `ListingCard.tsx`)

## TypeScript Usage

- Use TypeScript for all code; prefer interfaces over types
- Avoid enums; use maps or objects instead
- Use functional components with TypeScript interfaces
- Implement proper error handling and user-friendly error messages

## Syntax and Formatting

- Use semicolons and double quotes
- Add trailing commas in objects and arrays
- Favor explicit return statements

## UI and Styling

- Use Tailwind CSS for styling
- Implement responsive design with Tailwind CSS
- Use Lucide React for icons
- Follow Airbnb-style design patterns for vacation rental UX
- Implement proper loading states and error boundaries

## Performance Optimization

- Minimize use of `use client`, `useState`, and `useEffect`; favor server components
- Wrap client components in Suspense with fallback
- Use dynamic loading for non-critical components
- Optimize images: use WebP format, include size data, implement lazy loading

## Key Conventions

- Use `next/navigation` for navigation, not `next/router`
- Optimize Web Vitals (LCP, CLS, FID)
- Favor Server Actions over API routes when possible
- Follow Next.js 15 App Router conventions

## Database and Authentication

- Use Prisma for database operations with proper error handling
- Implement NextAuth.js v5 for authentication
- Use server actions for form submissions and data mutations

## Vacation Rental Domain Rules

- Prioritize owner/guest UX patterns familiar to Airbnb users
- Implement proper SEO for listing pages
- Use appropriate pricing display patterns ($XXX/night)
- Implement proper booking inquiry flows
- Show availability calendars for listings
- Handle property amenities and features appropriately

## Error Handling

- Implement comprehensive error boundaries
- Use proper error messages for user-facing errors
- Log errors appropriately for debugging
- Handle form validation errors gracefully